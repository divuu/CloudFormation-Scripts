Description: >
  utkarsh | Udacity 2020
  AWS-CloudFormation script to create an EC2 instance.

############################### Parameters ################################
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: UdagramApp

Mappings:
  WebAppRegion:
    ap-south-1:
      HVM64: ami-0d1cd67c26f5fca19

############################### Resources #################################
Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: LBSecGroup
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} LBSecGroup

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WebServerSecGroup
      GroupDescription: Allow http to our hosts and SSH access
      VpcId:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'
      SecurityGroupIngress:
        # 80 to 80 important for healthchecks !
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} WebServerSecGroup

  WebAppSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to ec2 and SHH access
      VpcId:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp:
            Fn::ImportValue: !Sub ${EnvironmentName}-BASTION1-CIDR
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp:
            Fn::ImportValue: !Sub ${EnvironmentName}-BASTION2-CIDR
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-WASG

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          sudo rm /var/www/html/index.html
          sudo aws s3 cp s3://udagram-app-patryk/udagram.zip /var/www/html
          sudo unzip /var/www/html/udagram.zip -d /var/www/html
          systemctl restart apache2.service
      IamInstanceProfile:
        Fn::ImportValue: !Sub '${EnvironmentName}-IAM-NAME'
      SecurityGroups:
        - Ref: 'WebAppSG'
      BlockDeviceMappings:
        - DeviceName: '/dev/sdk'
          Ebs:
            VolumeSize: '10'
            DeleteOnTermination: true
            VolumeType: 'gp2'
      ImageId: !FindInMap [WebAppRegion, !Ref 'AWS::Region', HVM64]
      InstanceType: t3.small

  WebAppASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: 4
      MaxSize: 4
      DesiredCapacity: 4
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub '${EnvironmentName}-PRI1-SN'
        - Fn::ImportValue: !Sub '${EnvironmentName}-PRI2-SN'
      LaunchConfigurationName: !Ref WebAppLaunchConfig
      TargetGroupARNs:
        - Ref: WebAppTG

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: udagram
      Subnets:
        - Fn::ImportValue: !Sub '${EnvironmentName}-PUB1-SN'
        - Fn::ImportValue: !Sub '${EnvironmentName}-PUB2-SN'
      SecurityGroups:
        - Ref: LBSecGroup

  WebAppListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTG
      LoadBalancerArn: !Ref WebAppLB
      Port: 80
      Protocol: HTTP

  WebAppLR:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTG
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref WebAppListener
      Priority: 1

  WebAppTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: '${EnvironmentName}-VPCID'

  #ScalingUp
  WebAppScaleUp:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebAppASG
      Cooldown: 300
      ScalingAdjustment: 1

  #ScalingDown
  WebAppScaleDown:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebAppASG
      Cooldown: 300
      ScalingAdjustment: -1

############################### Outputs #################################
Outputs:
  Website:
    Description: The Public DNS for the EC2 Instance
    Value: !Join ['', ['http://', !GetAtt [WebAppLB, DNSName]]]

  WebAppCPUHighAlarm:
    Description: 'CloudWatch to send alarms when EC2 CPU is High'
    Value: !Ref 'WebAppCPUHighAlarm'

  WebAppCPULowAlarm:
    Description: 'CloudWatch to send alarms when EC2 CPU is Low'
    Value: !Ref 'WebAppCPULowAlarm'

  WebAppASG:
    Description: 'Group ID of Auto Scaling Group Reference ID'
    Value: !Ref 'WebAppASG'

  WebAppScaleUp:
    Description: 'Policy ID of Auto Scaling Up'
    Value: !Ref 'WebAppScaleUp'

  WebAppScaleDown:
    Description: 'Policy ID of Auto Scaling Down'
    Value: !Ref 'WebAppScaleDown'
